/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define STICKY_LAYER 1
#define NUM_LAYER 2
#define SYM_LAYER 3
#define MEDIA_LAYER 4
#define GAME_LAYER 5
#define BLU_LAYER 6

/ {
        combos {
                compatible = "zmk,combos";
                combo_blu {
                        key-positions = <10 11>;
                        bindings = <&sl BLU_LAYER>;
                };
        };

        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <200>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                        global-quick-tap;
                };
                llt: left_layer_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LEFT_THUMB_LAYER_TAP";
                        #binding-cells = <2>;
                        flavor = "hold-preferred";
                        tapping-term-ms = <200>;
                        bindings = <&mo>, <&kp>;
                };
                rlt: right_layer_tap {
                        compatible = "zmk,behavior-hold-tap";
                        label = "RIGHT_THUMB_LAYER_TAP";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <200>;
                        bindings = <&mo>, <&kp>;
                };
                shgui: shift_gui {
                        compatible = "zmk,behavior-mod-morph";
                        label = "SHIFT_GUI";
                        #binding-cells = <0>;
                        bindings = <&kp GUI>, <&caps_word>;
                        mods = <(MOD_LSFT)>;
                };
        };

        macros {
                lambda: lambda {
                        label = "Lambda";
                        compatible = "zmk,behavior-macro";
                        wait-ms = <1>;
                        #binding-cells = <0>;
                        bindings
                            = <&kp EQUAL>
                            , <&kp GT>
                            , <&kp SPACE>
                            ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | Esc/Sticky  |  Q  |  W  |  F      |  P       |  B    |---|  J |  L     |  U      |  Y  |  ;  | \   |
// | Tab/multi   |  A  |  R  |  S/Alt  |  T/Ctrl  |  G    |---|  M | N/Ctrl |  E/Alt  |  I  |  O  | '   |
// | GUI/CapWord |  Z  |  X  |  C      |  D       |  V    |---|  K |  H     |  ,      |  .  |  /  | DEL |
//                  | Num/Bksp | Space/Shft | Space/Sym |---| ENT/multi | SPACE | BKSP |
                        bindings = <
   &lt STICKY_LAYER ESC &kp Q &kp W &kp F      &kp P       &kp B     &kp J &kp L        &kp U          &kp Y   &kp SEMI &kp BSLH
   &lt MEDIA_LAYER TAB  &kp A &kp R &hm LALT S &hm LCTRL T &kp G     &kp M &hm RCTRL N  &hm RALT E     &kp I   &kp O    &kp SQT
   &shgui               &kp Z &kp X &kp C      &kp D       &kp V     &kp K &kp H        &kp COMMA      &kp DOT &kp FSLH &kp DEL
     &llt NUM_LAYER BSPC  &mt LSHFT SPACE   &llt SYM_LAYER SPACE       &rlt MEDIA_LAYER RET   &kp SPACE   &kp BSPC
                        >;
                };

                sticky_layer {
// ----------------------------------------------------------------------------------------
// |  |  |  |  |  |  | ----- |  |  |  |  |  |  |
// |  |  |  |  |  |  | ----- |  |  |  |  |  |  |
// |  |  |  |  |  |  | ----- |  |  |  |  |  |  |
//     | Num | DEFAULT | SYM | ----- | MEDIA |  |  |
                        bindings = <
  &trans  &trans &trans &trans &trans &trans     &trans &trans &trans &trans &trans &trans
  &trans &trans &trans &trans &trans &trans     &trans &trans &trans &trans &trans &trans
  &trans &trans &trans &trans &trans &trans     &trans &trans &trans &trans &trans &trans
          &to NUM_LAYER &to 0 &to SYM_LAYER     &to MEDIA_LAYER &trans &trans
                        >;
                };
                
                num_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     | Undo | Redo  |  |---| / | 7 | 8 | 9 | - | Cal |
// |      |     | Cut | Copy | Paste |  |---| * | 4 | 5 | 6 | + |     |
// |      |     |     |      |       |  |---| 0 | 1 | 2 | 3 | . |     |
//                             |  |  |  |---|  |   |  |
                        bindings = <
   &trans &trans &trans    &kp LC(Z) &kp LC(Y) &trans     &kp FSLH        &kp N7 &kp N8 &kp N9 &kp MINUS &kp C_AL_CALC
   &trans &trans &kp LC(X) &kp LC(C) &kp LC(V) &trans     &kp KP_MULTIPLY &kp N4 &kp N5 &kp N6 &kp PLUS  &trans
   &trans &trans &trans    &trans    &trans    &trans     &kp N0          &kp N1 &kp N2 &kp N3 &kp DOT   &trans
                            &trans   &trans   &trans       &trans   &trans   &trans
                        >;
                };

                syms_layer { 
// -----------------------------------------------------------------------------------------
// |   |     |  _  |  -  |  +  |  *  |---|  ^  |   &   |  (  |  )  |  *  |   \  |
// |   |  !  |  @  |  #  |  $  |  %  |---|  -  |   =   |  [  |  ]  |  `  |   |  |
// |   |     |     |     |     |     |---|  _  |   +   |  {  |  }  |  ~  |  =>  |
//                 |     |     |     |---| ENT | SPACE | BKSP |
                        bindings = <
   &trans &trans            &kp UNDER &kp MINUS &kp PLUS   &kp KP_MULTIPLY     &kp CARET &kp AMPS  &kp LPAR &kp RPAR &kp KP_MULTIPLY &kp BSLH
   &trans &kp EXCLAMATION   &kp AT    &kp POUND &kp DOLLAR &kp PERCENT         &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp GRAVE       &kp PIPE
   &trans &trans            &trans    &trans    &trans     &trans              &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp TILDE       &lambda
                                                     &trans &trans &trans      &kp RET &kp SPACE &kp BSPC
                        >;
                };

                media_layer {
// -----------------------------------------------------------------------------------------
// | F1  | F2  | F3  | F4   | F5   | F6  | ----- | PgUp | Home | PgDn | End   | Prev | PrtScn  |
// | F7  | F8  | F9  | F10  | F11  | F12 | ----- | Left | Down | Up   | Right |      | ScnSnip |
// | F13 | F14 | F15 | F16  | F17  | F18 | ----- | PlPu | Vol- | Vol+ | MUTE  | Next | Menu    |
//                   | CTRL | SHFT | ALT | ----- |       |      |      |
                        bindings = <
  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6      &kp PG_UP  &kp HOME     &kp PG_DN    &kp END    &kp C_PREV &kp PSCRN
  &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &kp F12     &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT  &trans     &kp LG(LS(S))
  &kp F13 &kp F14 &kp F15 &kp F16 &kp F17 &kp F18     &kp C_PP   &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &kp C_NEXT &kp K_APP
                      &kp LCTRL &kp LSHFT &kp LALT    &trans &trans &trans
                        >;
                };

                gaming_layer {
// ------------------------------------------------------------------------------------------
// | ESC |  |  |   |   |  | --- |  |  |  |  |  |  |
// | Tab |  |  | S | T |  | --- |  |  |  |  |  |  |
// | --- |  |  |   |   |  | --- |  |  |  |  |  |  |
//   | Ctrl | Shift | Alt | --- |  |  |  |
                        bindings = <
  &kp ESC       &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
  &kp TAB       &trans &trans &kp S  &kp T  &trans    &trans &trans &trans &trans &trans &trans
  &mo NUM_LAYER &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans &trans
                     &kp LCTRL &kp LSHIFT &kp LALT    &trans &trans &trans
                        >;
                };

//                 qwerty_layer {  // Used for gaming Currently Satisfactory
// // -----------------------------------------------------------------------------------------
// // | ESC  | O     | Q | W | E | R | ----- | VolUp | BriUp | N | 9 | 6 | 3 |
// // | TAB  | Shift | A | S | D | F | ----- | VolDn | BriDn | P | 8 | 5 | 2 |
// // | M    | Z     | X | V | C | B | ----- |       |       | 0 | 7 | 4 | 1 |
// //                | Ctrl | Space | Alt | ----- | Num | Copy | Paste |
//                         bindings = <
//   &kp ESC   &kp O     &kp Q &kp W &kp E &kp R     &kp C_VOL_UP &kp F15 &kp N  &kp N9 &kp N6 &kp N3
//   &kp TAB   &kp LSHFT &kp A &kp S &kp D &kp F     &kp C_VOL_DN &kp F14 &kp P  &kp N8 &kp N5 &kp N2
//   &kp M     &kp Z     &kp X &kp V &kp C &kp B     &none        &none   &kp N0 &kp N7 &kp N4 &kp N1
//             &kp LCTRL &kp SPACE &kp LALT         &tog GANP_LAYER &kp LC(C) &kp LC(V)
//                         >;
//                 };

//                 qwerty_numpad {
// // |  |  |  |  |  |  | ----- |  | Bksp | 9 | 6 | 3 | RET |
// // |  |  |  |  |  |  | ----- |  | *    | 8 | 5 | 2 | .   |
// // |  |  |  |  |  |  | ----- |  | /    | 7 | 4 | 1 | 0   |
// //          |  |  |  | ----- | QWERT | - | + |
//                         bindings = <
//   &trans &trans &trans &trans &trans &trans    &trans &kp BSPC        &kp N9 &kp N6 &kp N3 &kp RET
//   &trans &trans &trans &trans &trans &trans    &trans &kp KP_MULTIPLY &kp N8 &kp N5 &kp N2 &kp DOT
//   &trans &trans &trans &trans &trans &trans    &trans &kp KP_DIVIDE   &kp N7 &kp N4 &kp N1 &kp N0
//                        &trans &trans &trans    &trans &kp KP_MINUS &kp KP_PLUS
//                        >;
//                 };

                        blu_layer {
// ------------------------------------------------------------------------
// | 0   | 1 | 2 | 3 | 4     | CLR | === | 0   | 1     | 2 | 3 | 4 | CLR |
// | BLU |   |   |   | Reset | USB | === | USB | Reset |   |   |   | BLU |
// | DL  |   |   |   | Boot  | GL  | === | DL  | Boot  |   |   |   | GL  |
//                       | | | | === | | | |
                                bindings = <
  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR         &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
  &out OUT_BLE &none        &none        &none        &reset       &out OUT_USB       &out OUT_USB &reset       &none        &none        &none        &out OUT_BLE
  &to 0        &none        &none        &none        &bootloader  &to GAME_LAYER     &to 0        &bootloader  &none        &none        &none        &to GAME_LAYER
                                                                &none &none &none     &none &none &none
                                >;
                        };
         };
};
